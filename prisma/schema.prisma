generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Rol {
  CLIENTE
  EMPLEADO
  ADMIN
}

model Usuario {
  id Int @id @default(autoincrement())
  cedula     String       @unique
  nombre     String
  apellido   String
  email      String       @unique
  telefono   String
  contrasena String

  roles      UsuarioRol[]
  paquetes   Paquete[]    @relation("PaquetesRegistrados")

  facturas   Factura[]    @relation("FacturasCliente")

}

model UsuarioRol {
  id        Int    @id @default(autoincrement())
  usuarioId String
  rol       Rol

  usuario   Usuario @relation(fields: [usuarioId], references: [cedula])

  @@unique([usuarioId, rol])
}

model Almacen {
  codigo      Int       @id @default(autoincrement())
  telefono    String
  direccionId Int       @unique
  direccion   Direccion @relation(fields: [direccionId], references: [id])

  paquetes          Paquete[]
  origenEnvios      Envio[]    @relation("Origen")
  destinoEnvios     Envio[]    @relation("Destino")

  origenPaquetes    Paquete[]  @relation("PaqueteOrigen")
  destinoPaquetes   Paquete[]  @relation("PaqueteDestino")
}

model Direccion {
  id           Int      @id @default(autoincrement())
  linea1       String
  linea2       String
  pais         String
  estado       String
  ciudad       String
  codigoPostal Int

  almacen      Almacen?
}

enum EstadoPaquete {
  REGISTRADO
  EN_TRANSITO
  EN_ALMACEN
  ENTREGADO
  CANCELADO
}
model Paquete {
  tracking        Int      @id @default(autoincrement())
  descripcion     String
  estado          EstadoPaquete @default(REGISTRADO)
  almacenCodigo   Int
  empleadoCedula  String
  medidasId       Int      @unique
  origenId        Int
  destinoId       Int
  tipoEnvio       String
  medidas         Medidas  @relation(fields: [medidasId], references: [id])
  almacen         Almacen  @relation(fields: [almacenCodigo], references: [codigo])
  empleado        Usuario  @relation("PaquetesRegistrados", fields: [empleadoCedula], references: [cedula])

  origen          Almacen  @relation("PaqueteOrigen", fields: [origenId], references: [codigo])
  destino         Almacen  @relation("PaqueteDestino", fields: [destinoId], references: [codigo])

  detalleEnvio    DetalleEnvio[]
  detalleFactura  DetalleFactura?
}

model Medidas {
  id       Int     @id @default(autoincrement())
  largo    Int
  ancho    Int
  alto     Int
  peso     Int
  volumen  Int

  paquete  Paquete?
}

model Envio {
  numero        Int       @id @default(autoincrement())
  tipoEnvio          String
  estado        String   @default("EN TRANSITO")
  fechaSalida   DateTime @default(now())
  fechaLlegada  DateTime? 

  almacenOrigen Int       @unique
  almacenEnvio  Int       @unique

  Origen        Almacen   @relation("Origen", fields: [almacenOrigen], references: [codigo])
  Envio         Almacen   @relation("Destino", fields: [almacenEnvio], references: [codigo])

  detalleEnvio  DetalleEnvio[]
}

model DetalleEnvio {
  id              Int     @id @default(autoincrement())
  paqueteTracking Int
  envioNumero     Int

  paquete         Paquete @relation(fields: [paqueteTracking], references: [tracking])
  envio           Envio   @relation(fields: [envioNumero], references: [numero])
}

model Factura {
  numero         Int       @id @default(autoincrement())
  estado         String    @default("Pendiente")
  monto          Float
  metodoPago     String    @default("Desconocido")
  cantPiezas     Int
  envioNumero    Int       @unique //esto no va
  clienteCedula  String


  cliente        Usuario   @relation("FacturasCliente", fields: [clienteCedula], references: [cedula])

  detalleFactura DetalleFactura[]
}

model DetalleFactura {
  numero           Int     @id @default(autoincrement())
  facturaNumero    Int
  paqueteTracking  Int     @unique

  factura          Factura @relation(fields: [facturaNumero], references: [numero])
  paquete          Paquete @relation(fields: [paqueteTracking], references: [tracking])
}
